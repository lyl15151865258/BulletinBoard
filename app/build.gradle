apply plugin: 'com.android.application'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 30
    buildToolsVersion '28.0.3'
    defaultConfig {
        applicationId "com.zhongbenshuo.bulletinboard"
        minSdkVersion 17
        targetSdkVersion 30
        versionCode 20210604
        versionName "1.0.1"

        ndk {
            abiFilters "armeabi", "x86", "armeabi-v7a", "arm64-v8a", "x86_64"
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['src/main/jniLibs']
            java.srcDirs = ['src/main/java']
        }
    }

    signingConfigs {
        debug {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
        release {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

    buildTypes {
        debug {
            // 是否支持调试
            debuggable true
            // 是否支持jni调试
            jniDebuggable true
            // 代码压缩
            minifyEnabled false
            // 移除无用的resource文件
            shrinkResources false
            // 是否支持Zipalign优化
            zipAlignEnabled true
            // 是否支持本地化整理
            pseudoLocalesEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //打签名包时，需要添加此设置
            signingConfig signingConfigs.debug
        }
        release {
            // 是否支持调试
            debuggable true
            // 是否支持jni调试
            jniDebuggable true
            // 代码压缩
            minifyEnabled false
            // 移除无用的resource文件
            shrinkResources false
            // 是否支持Zipalign优化
            zipAlignEnabled true
            // 是否支持本地化整理
            pseudoLocalesEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //打签名包时，需要添加此设置
            signingConfig signingConfigs.release
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "ZBSBoard_${variant.versionName}.apk"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.3.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.0'
    implementation 'com.google.code.gson:gson:2.8.6'
    // eventbus
    implementation 'org.greenrobot:eventbus:3.1.1'
    // Glide
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    //okhttp、retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.9.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.7.2'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.6'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    // 注解
    implementation 'org.jetbrains:annotations:16.0.1'
}